"use strict";(self.webpackChunkathenaserving=self.webpackChunkathenaserving||[]).push([[6213],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),d=o,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8329:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1,sidebar_label:"concept"},i=void 0,l={unversionedId:"\u5feb\u901f\u5f00\u59cb/\u6982\u5ff5",id:"\u5feb\u901f\u5f00\u59cb/\u6982\u5ff5",title:"\u6982\u5ff5",description:"* Cluster",source:"@site/docs/\u5feb\u901f\u5f00\u59cb/\u6982\u5ff5.md",sourceDirName:"\u5feb\u901f\u5f00\u59cb",slug:"/\u5feb\u901f\u5f00\u59cb/\u6982\u5ff5",permalink:"/MindcrestOcean-githubio/en/docs/current/\u5feb\u901f\u5f00\u59cb/\u6982\u5ff5",draft:!1,editUrl:"https://github.com/openfusionx/MindcrestOcean-githubio/docs/\u5feb\u901f\u5f00\u59cb/\u6982\u5ff5.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"concept"},sidebar:"docSidebar",previous:{title:"Quick Start",permalink:"/MindcrestOcean-githubio/en/docs/current/category/quick-start"},next:{title:"Prepare the environment",permalink:"/MindcrestOcean-githubio/en/docs/current/\u5feb\u901f\u5f00\u59cb/\u51c6\u5907\u73af\u5883"}},c={},s=[],u={toc:s},p="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Cluster")),(0,o.kt)("p",null,"A large data storage and computing system composed of a group of services and hosts."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Service")),(0,o.kt)("p",null,"A software system deployed on a cluster, such as distributed storage HDFS and distributed computing SPARK."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Service role")),(0,o.kt)("p",null,"The components of a service. for example HDFS have NameNode\uff0cDataNode\uff0cSecondryNameNode service role and so on."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Service Role Instance")),(0,o.kt)("p",null,"A service role instance is a stably running instance process."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Role Category")),(0,o.kt)("p",null,"There are three types of service roles: Master roles,Worker roles,Client roles."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Management Node")),(0,o.kt)("p",null,"Deploy NexusFabric a group of hosts on the management end."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Worker Nodes")),(0,o.kt)("p",null,"Deploy NexusFabric a group of hosts at the working end."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"NexusFabric platform management end")),(0,o.kt)("p",null,"NexusFabric Platform management end\uff0cprovide Web Ui\uff0cResponsible for communication with the working end of NexusFabric platform\uff0cSend service management operation instructions."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"NexusFabric platform working end")),(0,o.kt)("p",null,"A service for which the NexusFabric platform executes instructions\uff0cExecute the operation instructions sent by the management end."))}m.isMDXComponent=!0}}]);